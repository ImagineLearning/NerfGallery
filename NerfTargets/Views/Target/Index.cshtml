<div id="target" class="hidden" onclick="tabletHit()">
	<div class="overlay">
	</div>
</div>

<div id="text" style="font-size: 300px; text-align: center"></div>
<div id="ready">Ready</div>
<div id="debug"></div>


@section scripts {
	<link rel="stylesheet" type="text/css" media="screen" href="~/Content/target_gallery.css" />
	<!--Script references. -->
	<!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
	<!--Reference the SignalR library. -->
	<script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
	<!--Reference the autogenerated SignalR hub script. -->
	<script src="~/signalr/hubs"></script>
	<!--SignalR script to update the chat page and send messages.-->
	<script>
		var hub;
		var canSendHit = false;
		var clientId;
		var timer;
		var sensitivity = getParameterByName("s") || 1;
		var quietTime = getParameterByName("q") || 1000;

		function getParameterByName(name) {
			name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
			var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
				results = regex.exec(location.search);
			return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
		}

		function debug(text) {
			$('#debug').text($('#debug').text() + text);
		}

		$(function() {
			clientId = parseInt(getParameterByName('t'));
			debug('client id: ' + clientId);
			debug('sensitivity: ' + sensitivity);
			debug('quiet time: ' + quietTime);

			// Reference the auto-generated proxy for the hub.
			hub = $.connection.targetHub;
			// Create a function that the hub can call back to display messages.
			hub.client.showCountdown = function(text) {
				// Add the message to the page.
				$('#text').text(text);
			};

			// Create a function that the hub can call back to display messages.
			hub.client.gameOver = function (hits, misses) {
				// Add the message to the page.
				$('#text').text(hits);
			};

			hub.client.showTarget = function(idNum) {
				if (idNum === clientId) {
					//$('#text').text('Hit Me');
					$('#target').removeClass('hidden');
					$('#target').removeClass('selected');
				}
			}

			hub.client.hideTarget = function(idNum) {
				if (idNum === clientId) {
					//$('#text').text('');
					if ($('#target').hasClass('selected')) {
						setTimeout(function () { $('#target').removeClass('selected'); $('#target').addClass('hidden'); }, 3000);
					} else {
						$('#target').addClass('hidden');
					}
				}
			}

			$.connection.hub.start().done(function() {
				hub.server.setClientId(clientId);
			});

			function startTimer() {
				$('#ready').text("Not Ready");
				timer = setTimeout(function() { canSendHit = true; $('#ready').text("Ready");}, quietTime);
			}

			startTimer();

			window.tabletHit = function() {
 				if (canSendHit) {
				if (typeof hub !== 'undefined') {
					var goodHit = !$('#target').hasClass('hidden');
					$('#target').addClass('selected');
					
					hub.server.recordHit(goodHit);
					canSendHit = false;
						startTimer();
					debug('sent hit ' + (goodHit ? '[good]' : '[bad]'));
				}
				} else {
					clearTimeout(timer);
					startTimer();
				}
			}


			if (window.DeviceMotionEvent != undefined) {
				window.ondevicemotion = function(e) {

					if (e.rotationRate) {
						var alpha = e.rotationRate.alpha;
						var beta = e.rotationRate.beta;
						var gamma = e.rotationRate.gamma;

						if (Math.abs(alpha) > sensitivity || Math.abs(beta) > sensitivity || Math.abs(gamma) > sensitivity) {
							tabletHit();

						}
					}
				}
			}
		});


	</script>
}